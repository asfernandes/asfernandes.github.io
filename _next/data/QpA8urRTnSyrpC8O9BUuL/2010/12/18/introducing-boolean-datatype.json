{"pageProps":{"postData":{"id":["2010","12","18","introducing-boolean-datatype"],"contentHtml":"<p>The support for a BOOLEAN datatype was the <a href=\"http://tracker.firebirdsql.org/browse/CORE-726\">third most voted</a> feature in the Firebird tracker. The deal with it was about make it right and complete, having booleans expressions allowed where values are expected, and vice versa. Oracle did it wrong and they BOOLEAN is crap.<div>Yesterday I finished and committed this support for Firebird 3. You can use them like any other type. You can index it, aggregate by it and sort by it. If you have an index on a boolean field, you can also do indexed searches by its negated form (NOT field).</div><div>Three new literals are introduced: FALSE, TRUE and UNKNOWN (same as NULL).</div><div>Booleans are not implicitly convertible to any other datatype. But it's convertible to/from strings with CAST.</div><div>It's allowed to test booleans without compare with TRUE or FALSE. For example, \"field1 OR field2\" and \"NOT field1\" are valid expressions. It's also allowed to compare with others operators, including the new IS operator: \"field1 IS FALSE\".</div><div>Currently it has a terrible and bad hack. The new syntax would introduce a lot of parser conflicts related with trigger's INSERTING, UPDATING and DELETING expressions. These boolean expressions was non-reserved words and allowed to be used as column and variable names. The correct solution shall be to reserve these words and do not allow them to be used as names without double quotes.</div><div>As usual, this causes conflict opinions. I don't want to fight forever on this, so I make them work as triggers keywords in boolean expressions and as values in non-booleans expressions. This is much very compatible with previous versions, but is very confusing. For example, in \"SELECT inserting, NOT inserting FROM test WHERE INSERTING and INSERTING IS TRUE\" the INSERTING's are recognized as value, keyword, keyword and value.</div><div>I hope this clears people's minds and we have a better solution in the final version.</div></p>\n","layout":"post","title":"Introducing the boolean datatype","date":"2010-12-18T10:36:00.002-02:00","author":"Adriano dos Santos Fernandes","tags":["firebird"],"modified_time":"2010-12-18T11:11:35.794-02:00","blogger_id":"tag:blogger.com,1999:blog-3443854162607009076.post-6267391664435360409","blogger_orig_url":"http://asfernandes.blogspot.com/2010/12/introducing-boolean-datatype.html"}},"__N_SSG":true}