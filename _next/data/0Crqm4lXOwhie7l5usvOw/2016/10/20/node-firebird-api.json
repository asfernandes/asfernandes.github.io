{"pageProps":{"postData":{"id":["2016","10","20","node-firebird-api"],"contentHtml":"<p>I started a personal project to create a Node.js Firebird driver based on the FB 3 OO API.</p>\n<p>Why another driver if there are others? Althrough it's a manual work for now as I understand the technology, the idea is to generate the driver based in the cloop interface file and always have a up-to-date driver. As a personal project, it will probably take some time having to conciliate two jobs.</p>\n<p>The API will be based in promises instead of callback. A nice thing I already see is the capability to use the asynchronous functions as synchronous ones using TypeScript (and future JavaScript) async/await functions.</p>\n<p>Here is a test demonstrating multi-threaded use of two databases. It's so simple to write multi-threaded code that I think it would be much better to write tools (a multi-threaded gbak?) than currently is with C++.</p>\n<div class=\"remark-highlight\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"test()\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span>filename<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Promise</span><span class=\"token operator\">&#x3C;</span><span class=\"token keyword\">void</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> status <span class=\"token operator\">=</span> master<span class=\"token punctuation\">.</span><span class=\"token function\">getStatus</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">try</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">const</span> stmt1 <span class=\"token operator\">=</span> <span class=\"token string\">\"create table t1 (n1 integer)\"</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">const</span> stmt2 <span class=\"token operator\">=</span> <span class=\"token string\">\"insert into t1 values (1)\"</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token keyword\">let</span> attachment <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> dispatcher<span class=\"token punctuation\">.</span><span class=\"token function\">createDatabase</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token keyword\">try</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">let</span> transaction <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">startTransaction</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token keyword\">try</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> transaction<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> stmt1<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                    <span class=\"token keyword\">await</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">commitRetaining</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n                    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&#x3C;</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">;</span> <span class=\"token operator\">++</span>i<span class=\"token punctuation\">)</span>\n                        <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">,</span> transaction<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> stmt2<span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n                <span class=\"token keyword\">finally</span>\n                <span class=\"token punctuation\">{</span>\n                    <span class=\"token keyword\">await</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n                <span class=\"token punctuation\">}</span>\n            <span class=\"token punctuation\">}</span>\n            <span class=\"token keyword\">finally</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">detach</span><span class=\"token punctuation\">(</span>status<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">finally</span>\n        <span class=\"token punctuation\">{</span>\n            status<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">//await f(\"/tmp/f1.fdb\");</span>\n    <span class=\"token comment\">//await f(\"/tmp/f2.fdb\");</span>\n    <span class=\"token keyword\">return</span> <span class=\"token builtin\">Promise</span><span class=\"token punctuation\">.</span><span class=\"token function\">all</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/f1.fdb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">f</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/tmp/f2.fdb\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>It also would be much simpler to write tests than it's with currently used tools (C++ and Python). The Firebird Python test suite is a monster with lots of manual dependencies that I never managed to install.</p>\n","layout":"post","title":"Node.js Firebird API","published":true,"date":"2016-10-20","author":"Adriano dos Santos Fernandes","tags":["firebird","nodejs","javascript","typescript"]}},"__N_SSG":true}