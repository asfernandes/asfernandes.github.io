{"pageProps":{"postData":{"id":["2017","03","29","node-firebird-drivers"],"contentHtml":"<p>I'm pleased to announce the initial release of my Firebird drivers projects for Node.js.</p>\n<ul>\n<li>You said projects?</li>\n<li>Yes!</li>\n</ul>\n<p>The work is split in three projects, as described below.</p>\n<h1>node-firebird-driver-native</h1>\n<p>Firebird high-level native client for Node.js / TypeScript (<a href=\"https://github.com/asfernandes/node-firebird-driver-native\">github</a> /\n<a href=\"https://www.npmjs.com/package/node-firebird-driver-native\">npm</a>)</p>\n<p>This is the more interesting project for now. It allows to use Firebird (via Firebird v3+ client library) with a good high-level API.</p>\n<p>Example usage:</p>\n<div class=\"remark-highlight\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> createNativeClient<span class=\"token punctuation\">,</span> getDefaultLibraryFilename <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'node-firebird-driver-native'</span><span class=\"token punctuation\">;</span>\n\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> client <span class=\"token operator\">=</span> <span class=\"token function\">createNativeClient</span><span class=\"token punctuation\">(</span><span class=\"token function\">getDefaultLibraryFilename</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token comment\">// Without 'server:', it will use Firebird embedded.</span>\n    <span class=\"token keyword\">const</span> attachment <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">createDatabase</span><span class=\"token punctuation\">(</span><span class=\"token string\">'server:/tmp/new-db.fdb'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n        username<span class=\"token operator\">:</span> <span class=\"token string\">'sysdba'</span><span class=\"token punctuation\">,</span>\n        password<span class=\"token operator\">:</span> <span class=\"token string\">'masterkey'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> transaction <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">startTransaction</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'create table t1 (n integer, d date)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">commitRetaining</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> statement1 <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">prepare</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'insert into t1 values (?, ?)'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> statement1<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> statement1<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> statement1<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> statement1<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> resultSet <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">executeQuery</span><span class=\"token punctuation\">(</span>transaction<span class=\"token punctuation\">,</span>\n        <span class=\"token string\">'select n, d from t1 where n &#x3C;= ?'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> rows <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> columns <span class=\"token keyword\">of</span> rows<span class=\"token punctuation\">)</span>\n        <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'n: '</span> <span class=\"token operator\">+</span> columns<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">', d: '</span> <span class=\"token operator\">+</span> columns<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> resultSet<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> transaction<span class=\"token punctuation\">.</span><span class=\"token function\">commit</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">await</span> attachment<span class=\"token punctuation\">.</span><span class=\"token function\">dropDatabase</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">await</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">dispose</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">test</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Finish...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n<p>More examples can be found <a href=\"https://github.com/asfernandes/node-firebird-driver-native/blob/master/src/test/test.ts\">here</a>.</p>\n<h1>node-firebird-driver</h1>\n<p>Firebird client interfaces for Node.js / TypeScript (<a href=\"https://github.com/asfernandes/node-firebird-driver\">github</a> /\n<a href=\"https://www.npmjs.com/package/node-firebird-driver\">npm</a>)</p>\n<p>This project currently has only TypeScript interfaces for a Firebird client. In the future it may have common code for any Firebird client,\nlike connection pools and utility functions.</p>\n<p><code>node-firebird-driver-native</code> implements the interfaces from this project. In the future, we may have another socket-based project also\nimplementing these interfaces, so all drivers will be type-compatible.</p>\n<h1>node-firebird-native-api</h1>\n<p>Firebird low-level API for Node.js / TypeScript (<a href=\"https://github.com/asfernandes/node-firebird-native-api\">github</a> /\n<a href=\"https://www.npmjs.com/package/node-firebird-native-api\">npm</a>)</p>\n<p>This project converts Firebird cloop interfaces to TypeScript and NAN bindings to access the native fbclient code. It's a dependency project\nfor <code>node-firebird-driver-native</code>.</p>\n<p>It's currently not complete and you should use it directly only if you know what are you doing.</p>\n<h1>Disclaimer</h1>\n<p>All the projects are currently in ALPHA version, so changes are expected without caring about semver breaks.</p>\n","layout":"post","title":"Node.js Firebird Drivers","published":true,"date":"2017-03-29","author":"Adriano dos Santos Fernandes","tags":["firebird","nodejs","javascript","typescript"]}},"__N_SSG":true}