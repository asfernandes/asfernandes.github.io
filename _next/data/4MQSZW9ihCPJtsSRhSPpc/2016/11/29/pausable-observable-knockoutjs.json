{"pageProps":{"postData":{"id":["2016","11","29","pausable-observable-knockoutjs"],"contentHtml":"<p>Sometimes when working with <a href=\"http://knockoutjs.com\">Knockout</a> you may be in a situation when you want to update a set of observables without delivering notifications to they subscribers (explicitly or by computed observables) as soon each observable is changed. This happens especially when you're using the <a href=\"http://knockoutjs.com/documentation/plugins-mapping.html\">mapping plugin</a> or something similar.</p>\n<p>However, it's not easy to achieve this with builtin knockout functions nor it's very intuitive to do it right.</p>\n<p>So I created a function and an extender that make it. Full code is here and I put this <a href=\"https://jsfiddle.net/e8tsnxpa\">jsfiddle</a> to see the use case.</p>\n<p>Note that when \"Just map\" is clicked it logs a weird thing. When \"Map with pause\" is clicked the notification happens after all observables are changed.</p>\n<div class=\"remark-highlight\"><pre class=\"language-javascript\"><code class=\"language-javascript\">ko<span class=\"token punctuation\">.</span><span class=\"token property-access\">utils</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">pausableObservable</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">state</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> observable <span class=\"token operator\">=</span> ko<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">observable</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> pending <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n    observable<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">pushNotification</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">object<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>conf<span class=\"token punctuation\">.</span><span class=\"token property-access\">pushed</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            conf<span class=\"token punctuation\">.</span><span class=\"token property-access\">pushed</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span>\n            pending<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> object<span class=\"token operator\">:</span> object<span class=\"token punctuation\">,</span> conf<span class=\"token operator\">:</span> conf<span class=\"token punctuation\">,</span> args<span class=\"token operator\">:</span> args <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    observable<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">newValue</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>newValue<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">var</span> pendingCache <span class=\"token operator\">=</span> pending<span class=\"token punctuation\">;</span>\n            pending <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n            ko<span class=\"token punctuation\">.</span><span class=\"token property-access\">utils</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">arrayForEach</span><span class=\"token punctuation\">(</span>pendingCache<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                item<span class=\"token punctuation\">.</span><span class=\"token property-access\">conf</span><span class=\"token punctuation\">.</span><span class=\"token property-access\">pushed</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            ko<span class=\"token punctuation\">.</span><span class=\"token property-access\">utils</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">arrayForEach</span><span class=\"token punctuation\">(</span>pendingCache<span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n                item<span class=\"token punctuation\">.</span><span class=\"token property-access\">object</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">notifySubscribers</span><span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span><span class=\"token property-access\">object</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">.</span><span class=\"token property-access\">args</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">return</span> observable<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\nko<span class=\"token punctuation\">.</span><span class=\"token property-access\">extenders</span><span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">pausable</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">target<span class=\"token punctuation\">,</span> pausable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> oldNotifySubscribers <span class=\"token operator\">=</span> target<span class=\"token punctuation\">.</span><span class=\"token property-access\">notifySubscribers</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">var</span> conf <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> pushed<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    target<span class=\"token punctuation\">.</span><span class=\"token method-variable function-variable method function property-access\">notifySubscribers</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value<span class=\"token punctuation\">,</span> event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span>pausable<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">peek</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword control-flow\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>event<span class=\"token punctuation\">)</span>\n                pausable<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">pushNotification</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> conf<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword control-flow\">else</span>\n            oldNotifySubscribers<span class=\"token punctuation\">.</span><span class=\"token method function property-access\">apply</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword control-flow\">return</span> target<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n</code></pre></div>\n","layout":"post","title":"Pausable observable with KnockoutJS","published":true,"date":"2016-11-29","author":"Adriano dos Santos Fernandes","tags":["knockout","javascript"]}},"__N_SSG":true}